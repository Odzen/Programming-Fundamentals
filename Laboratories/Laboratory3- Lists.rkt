#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.10 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 66 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 65 105 225 0 0 0
-1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
          0 6365 0 17 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 24 29 1 #"\n"
0 0 17 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 24 29 1 #"\n"
0 0 26 3 7 #"#reader"
0 0 24 3 1 #"("
0 0 14 3 3 #"lib"
0 0 24 3 1 #" "
0 0 19 3 25 #"\"htdp-advanced-reader.ss\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"lang\""
0 0 24 3 3 #")(("
0 0 14 3 7 #"modname"
0 0 24 3 1 #" "
0 0 14 3 19 #"taller-final-listas"
0 0 24 3 3 #") ("
0 0 14 3 19 #"read-case-sensitive"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 3 #") ("
0 0 14 3 10 #"teachpacks"
0 0 24 3 3 #" (("
0 0 14 3 3 #"lib"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"guess.rkt\""
0 0 24 3 1 #" "
0 0 19 3 11 #"\"teachpack\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"htdp\""
0 0 24 3 3 #") ("
0 0 14 3 3 #"lib"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"master.rkt\""
0 0 24 3 1 #" "
0 0 19 3 11 #"\"teachpack\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"htdp\""
0 0 24 3 5 #"))) ("
0 0 14 3 13 #"htdp-settings"
0 0 24 3 3 #" #("
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 14 3 11 #"constructor"
0 0 24 3 1 #" "
0 0 14 3 17 #"repeating-decimal"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 14 3 4 #"none"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 3 #" (("
0 0 14 3 3 #"lib"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"guess.rkt\""
0 0 24 3 1 #" "
0 0 19 3 11 #"\"teachpack\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"htdp\""
0 0 24 3 3 #") ("
0 0 14 3 3 #"lib"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"master.rkt\""
0 0 24 3 1 #" "
0 0 19 3 11 #"\"teachpack\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"htdp\""
0 0 24 3 3 #")) "
0 0 21 3 2 #"#f"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 130
(
 #";___________________________________________Taller Datos Compuestos_"
 #"______________________________________________________________"
) 0 0 24 29 1 #"\n"
0 0 17 3 130
(
 #";PARTE 1____________________________________________________________"
 #"______________________________________________________________"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";Estas son algunas listas definidas"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"-2"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"j"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista3"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 2 #"-2"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista4"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista5"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista6"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista7"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #"  "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista8"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";___________________________________________________________________"
 #"___________"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";La siguiente es una funcion auxiliar. "
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";longitud: list -> number"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";Proposito:"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";La siguiente funcion retorna la longitud de la lista suministrada."
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Ejemplos:"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";Al ingresar (longitud lista1) se debe obtener 7"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";Al ingresar (longitud lista5) se debe obtener 1"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";Al ingresar (longitud lista6) se debe obtener 0"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"longitud"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #")("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                      [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 8 #"longitud"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #")) "
0 0 21 3 1 #"1"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";Pruebas:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"longitud"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista1"
0 0 24 3 1 #")"
0 0 21 3 1 #"7"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"longitud"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista5"
0 0 24 3 1 #")"
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"longitud"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista6"
0 0 24 3 1 #")"
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 93
(
 #";___________________________________________________________________"
 #"_________________________"
) 0 0 24 29 1 #"\n"
0 0 17 3 38 #";La siguiente es una funcion auxiliar."
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";cadenadenumeros?: list -> boolean"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";Proposito:"
0 0 24 29 1 #"\n"
0 0 17 3 89
(
 #";Esta funcion determina si la lista sumistrada esta compuesta unicam"
 #"ente de numeros o no,"
) 0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";si lo esta la funcion retornara true, de los contario generara fals"
 #"e."
) 0 0 24 29 1 #"\n"
0 0 17 3 10 #";Ejemplos:"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";Al ingresar (cadenadenumeros? lista1) se debe obtener true"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";Al ingresar (cadenadenumeros? lista2) se debe obtener false"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";Al ingresar (cadenadenumeros? lista6) se debe obtener false"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"cadenadenumeros?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #")("
0 0 15 3 4 #"cond"
0 0 24 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 14 3 5 #"false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                     [("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 2 #"] "
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                     [("
0 0 14 3 3 #"not"
0 0 24 3 1 #"("
0 0 14 3 7 #"number?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 4 #"))) "
0 0 14 3 5 #"false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 16 #"cadenadenumeros?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                     ))"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";Pruebas:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"cadenadenumeros?"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista1"
0 0 24 3 1 #")"
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"cadenadenumeros?"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista2"
0 0 24 3 1 #")"
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"cadenadenumeros?"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista6"
0 0 24 3 1 #")"
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 88
(
 #";PUNTO 1____________________________________________________________"
 #"____________________"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";mayor: list -> number"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";Proposito:"
0 0 24 29 1 #"\n"
0 0 17 3 109
(
 #";La siguiente funcion evalua cada numero de la lista suministrada y "
 #"retorna como resultado el mayor de ellos,"
) 0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";esta funcion recibe listas que esten compuestas unicamente por nume"
 #"ros."
) 0 0 24 29 1 #"\n"
0 0 17 3 10 #";Ejemplos:"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";Al ingresar (mayor lista1) se debe obtener 10"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";Al ingresar (mayor lista4) se debe obtener 1"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";Al ingresar (mayor lista6) se debe obtener empty"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";Al ingresar (mayor lista2) se debe obtener empty"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"mayor"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #")("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                   [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 3 #"][("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #"("
0 0 14 3 16 #"cadenadenumeros?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                            [("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #"))("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #") ]"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                            [("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #") ("
0 0 14 3 5 #"mayor"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 5 #"))) ("
0 0 14 3 5 #"mayor"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 6 #")])]))"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";Pruebas:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 5 #"mayor"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista1"
0 0 24 3 1 #")"
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 5 #"mayor"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista4"
0 0 24 3 1 #")"
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 5 #"mayor"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista6"
0 0 24 3 1 #")"
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 5 #"mayor"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista2"
0 0 24 3 1 #")"
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";___________________________________________________________________"
 #"_________"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";La siguiente es una funcion auxiliar que se utiliza en la funcion p"
 #"romedio."
) 0 0 24 29 1 #"\n"
0 0 17 3 10 #";Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";suma: list -> number"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";Proposito:"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";La siguiente funcion suma los valores de la lista suministrada,"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";esta funcion recibe listas que esten compuestas unicamente por nume"
 #"ros."
) 0 0 24 29 1 #"\n"
0 0 17 3 10 #";Ejemplos:"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";Al ingresar (suma lista3) se debe obtener 4"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";Al ingresar (suma lista5) se debe obtener 1"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";Al ingresar (suma lista6) se debe obtener 0"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";Al ingresar (suma lista2) se debe obtener empty"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"suma"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                       [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 3 #"][("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #"("
0 0 14 3 16 #"cadenadenumeros?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #") ("
0 0 14 3 4 #"suma"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 7 #" )))]))"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";Pruebas:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"suma"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista3"
0 0 24 3 1 #")"
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"suma"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista5"
0 0 24 3 1 #")"
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"suma"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista6"
0 0 24 3 1 #")"
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"suma"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista2"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 90
(
 #";PUNTO 2____________________________________________________________"
 #"______________________"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";promedio: list -> number"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";Proposito:"
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";Esta funcion calcula el promedio de los valore de la lista suminist"
 #"rada,"
) 0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";para realizar dicho calculo hace uso de dos funciones auxiliares ll"
 #"amadas"
) 0 0 24 29 1 #"\n"
0 0 17 3 17 #";suma y longitud."
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";Esta funcion recibe listas que esten compuestas unicamente por nume"
 #"ros."
) 0 0 24 29 1 #"\n"
0 0 17 3 10 #";Ejemplos:"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";Al ingresar (promedio lista1) se debe obtener 3.714285"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";Al ingresar (promedio lista5) se debe obtener 1"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";Al ingresar (promedio lista6) se debe obtener empty"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";Al ingresar (promedio lista2) se debe obtener empty"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"promedio"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                           [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 3 #"][("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #"("
0 0 14 3 16 #"cadenadenumeros?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 4 #"suma"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #")("
0 0 14 3 8 #"longitud"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";Pruebas:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"promedio"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista1"
0 0 24 3 1 #")"
0 8          10 21 5 #"26/7\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"promedio"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista5"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"promedio"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista6"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"promedio"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista2"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 90
(
 #";PUNTO 3____________________________________________________________"
 #"______________________"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";inventir: lista -> lista"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";Proposito:"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";Esta funcion invierte el orden de la lista suministrada."
0 0 24 29 1 #"\n"
0 0 17 3 9 #";Ejemplo:"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";Al ingresar (invertir lista1) se debe obtener (list 0 1 8 -2 10 2 7"
 #")"
) 0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";Al ingresar (invertir lista2) se debe obtener (list 'x ' b 8 2 10 '"
 #"'j)"
) 0 0 24 29 1 #"\n"
0 0 17 3 55 #";Al ingresar (invertir lista5) se debe obtener (list 1)"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";Al ingresar (invertir lista6) se debe obtener empty"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"invertir"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #")("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                 [("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #"  "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 6 #"]     "
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                 [("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #")) "
0 0 14 3 5 #"lista"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #"("
0 0 14 3 8 #"invertir"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";Pruebas:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"invertir"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista1"
0 0 24 3 2 #")("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 2 #"-2"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 3 #") )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"invertir"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista2"
0 0 24 3 2 #")("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"j"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"invertir"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista5"
0 0 24 3 2 #")("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"invertir"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista6"
0 0 24 3 1 #")"
0 0 14 3 5 #"empty"
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #";___________________________________________________________________"
 #"_______________"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";La siguiente es una funcion auxiliar que se utiliza en la funcion f"
 #"lista."
) 0 0 24 29 1 #"\n"
0 0 17 3 10 #";Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";fibo: number -> number"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";Proposito:"
0 0 24 29 1 #"\n"
0 0 17 3 92
(
 #";Esta funcion calcula el numero de la serie fibonacci correspondient"
 #"e al valor suministrado."
) 0 0 24 29 1 #"\n"
0 0 17 3 9 #";Ejemplo:"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";Al ingresar (fibo 0) se debe obtener 0"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";Al ingresar (fibo 1) se debe obtener 1"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";Al ingresar (fibo 5) se debe obtener 3"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"fibo"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 3 2 #"[("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                      [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                      [("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 4 #"fibo"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"fibo"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 7 #"))) ]))"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";Pruebas:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"fibo"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"fibo"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"fibo"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 94
(
 #";PUNTO 5____________________________________________________________"
 #"__________________________"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";flista: list -> list"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";Proposito:"
0 0 24 29 1 #"\n"
0 0 17 3 92
(
 #";Esta funcion genera una lista con los primeros numeros de la serie "
 #"de fibonacci,la cantidad"
) 0 0 24 29 1 #"\n"
0 0 17 3 60
#";de terminos obtenidos esta dada por el numero suministrado."
0 0 24 29 1 #"\n"
0 0 17 3 9 #";Ejemplo:"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";Al ingresar (fibo 0) se debe obtener (list 0)"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";Al ingresar (fibo 1) se debe obtener (list 0 1)"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";Al ingresar (fibo 5) se debe obtener (list 0 1 1 2 3 5)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"flista"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 6 #"flista"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"fibo"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 7 #")) )]))"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";Pruebas:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"flista"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #")("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"flista"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #")("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"flista"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #")("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 91
(
 #";PUNTO 6____________________________________________________________"
 #"_______________________"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";eliminar_letter: list -> list"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";Proposito:"
0 0 24 29 1 #"\n"
0 0 17 3 94
(
 #";Esta funcion evalua la lista suministrada y elimina todos  los elem"
 #"entos que no sean numeros,"
) 0 0 24 29 1 #"\n"
0 0 17 3 67
#";retornando como resultado la lista solo con los valores numericos."
0 0 24 29 1 #"\n"
0 0 17 3 9 #";Ejemplo:"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";Al ingresar (eliminar_letter lista2) se debe obtener (list 10 2 8)"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";Al ingresar (eliminar_letter lista5) se debe obtener (list 1)"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";Al ingresar (eliminar_letter lista6) se debe pbtener empty"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"eliminar_letter"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #")("
0 0 15 3 4 #"cond"
0 0 24 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #"  "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 2 #"] "
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                 [("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 4 #")) ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 7 #"number?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #")) "
0 0 14 3 5 #"lista"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #"])]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 7 #"number?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 4 #")) ("
0 0 14 3 15 #"eliminar_letter"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 15 #"eliminar_letter"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 7 #"))])]))"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";Pruebas:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"eliminar_letter"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista2"
0 0 24 3 2 #")("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"eliminar_letter"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista5"
0 0 24 3 2 #")("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"eliminar_letter"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista6"
0 0 24 3 1 #")"
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 96
(
 #";PUNTO 7____________________________________________________________"
 #"____________________________"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";insertar: list element number -> list"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";Proposito:"
0 0 24 29 1 #"\n"
0 0 17 3 107
(
 #";Esta funcion inserta un elemento dado en la posicion asignada de un"
 #"a lista sumistrada. Si la posicion dada"
) 0 0 24 29 1 #"\n"
0 0 17 3 104
(
 #"; es menor a 0 o mayor al largo de la lista la funcion retornara la "
 #"lista sumistradsa sin ningun cambio."
) 0 0 24 29 1 #"\n"
0 0 17 3 9 #";Ejemplo:"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";Al ingresar (insertar lista2 5 3) se debe obtener (list 10 2 8)"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";Al ingresar (insertar lista2 5 9) se debe obtener (list 1)"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";Al ingresar (insertar lista2 5 -2) se debe pbtener empty"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";Al ingresar (insertar lista6 'a 0) se debe pbtener empty"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"insertar"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #")("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                              [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                              [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 14 3 5 #"lista"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                              [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #" ("
0 0 14 3 8 #"longitud"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 6 #") )) ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"insertar"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 1 #"e"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";Pruebas:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"insertar"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista2"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #")("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"j"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"insertar"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista2"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 2 #")("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"j"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"insertar"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista2"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"-2"
0 0 24 3 2 #")("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"j"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"insertar"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista6"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #")("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 98
(
 #";___________________________________________________________________"
 #"______________________________"
) 0 0 24 29 1 #"\n"
0 0 17 3 38 #";La siguiente es una funcion auxiliar."
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";ordenada?: list -> boolean"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";Proposito:"
0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #";Esta funcion evalua si la lista suministrada esta organizada de man"
 #"era ascendente."
) 0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";Esta funcion solo recibe listas que esten compuestas unicamente por"
 #" numeros."
) 0 0 24 29 1 #"\n"
0 0 17 3 10 #";Ejemplos:"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";Al ingresar (ordenada? lista1) se debe obtener false"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";Al ingresar (ordenada? lista6) se debe obtener empty"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";Al ingresar (ordenada? lista7) se debe obtener true"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";Al ingresar (ordenada? lista4) se debe obtener true"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #"("
0 0 14 3 9 #"ordenada?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #")("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                       [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 3 #"][("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #"("
0 0 14 3 16 #"cadenadenumeros?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #"("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                   [("
0 0 14 3 3 #"not"
0 0 24 3 1 #"("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #") ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 4 #"))))"
0 0 14 3 5 #"false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ordenada?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 7 #"))])]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";Pruebas:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ordenada?"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista6"
0 0 24 3 1 #")"
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ordenada?"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista7"
0 0 24 3 1 #")"
0 0 14 3 4 #"true"
0 0 24 3 21 #")                    "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ordenada?"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista4"
0 0 24 3 1 #")"
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 95
(
 #";PUNTO 9____________________________________________________________"
 #"___________________________"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";insertar_orden: list number -> list"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";Proposito:"
0 0 24 29 1 #"\n"
0 0 17 3 96
(
 #";Esta funcion genera la lista dada con el elemento numerico sumistad"
 #"o en la poscicon respectiva,"
) 0 0 24 29 1 #"\n"
0 0 17 3 63
#";la funcion solo recibe listas ordenadas y elementos numericos."
0 0 24 29 1 #"\n"
0 0 17 3 9 #";Ejemplo:"
0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";Al ingresar (insertar_orden lista1 5) se debe obtener (list 7 2 10 "
 #"-2 8 1 0)"
) 0 0 24 29 1 #"\n"
0 0 17 3 63
#";Al ingresar (insertar_orden lista6 2) se debe obtener (list 2)"
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";Al ingresar (insertar_orden lista7 3) se debe pbtener (list 1 3 4 6"
 #"  7 8)"
) 0 0 24 29 1 #"\n"
0 0 17 3 60
#";Al ingresar (insertar_orden lista2 2) se debe obtener empty"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";Al ingresar (insertar_orden lista1 3) se debe obtener empty"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"insertar_orden"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #")("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 4 #")][("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #"("
0 0 14 3 9 #"ordenada?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 14 3 5 #"false"
0 0 24 3 2 #")("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #"("
0 0 14 3 16 #"cadenadenumeros?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 14 3 5 #"false"
0 0 24 3 3 #")) "
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                               [("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #") ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"insertar_orden"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 1 #"e"
0 0 24 3 7 #"))])]))"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";Pruebas:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"insertar_orden"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista1"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"insertar_orden"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista6"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #")("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"insertar_orden"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista7"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #")("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #"  "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"insertar_orden"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"insertar_orden"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista1"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 107
(
 #";PUNTO 10___________________________________________________________"
 #"_______________________________________"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";buscar-elemento: list element -> element"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";Proposito:"
0 0 24 29 1 #"\n"
0 0 17 3 97
(
 #";Esta funcion busca el elemento deseado en la lista sumistrada y lo "
 #"retorna como resultado, si el"
) 0 0 24 29 1 #"\n"
0 0 17 3 65
#";elemento no se encuentra en la lista la funcion retornara empty."
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Ejemplos:"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";Al ingresar (buscar-elemento '(1 2 4 2 6 9) 9) se debe obtener 9"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";Al ingresar (buscar-elemento '(3 4 1 2 7 2) 4) se debe obtener 4"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";Al ingresar (buscar-elemento '()4) se debe obtener empty"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";Al ingresar (buscar-elemento lista2 5) se debe obtener empty"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";Al ingresar (buscar-elemento lista2 'a) se debe obtener 'a"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"buscar-elemento"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #" "
0 0 14 3 8 #"elemento"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                          [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                          [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 8 #"elemento"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ["
0 0 14 3 4 #"else"
0 0 24 3 1 #"("
0 0 14 3 15 #"buscar-elemento"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 8 #"elemento"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";Pruebas:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"buscar-elemento"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 2 #") "
0 0 21 3 1 #"9"
0 0 24 3 2 #") "
0 0 21 3 1 #"9"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"buscar-elemento"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"buscar-elemento"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"buscar-elemento"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista2"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"buscar-elemento"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista2"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 107
(
 #";PUNTO 11___________________________________________________________"
 #"_______________________________________"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";eliminar: list element -> list"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";Proposito:"
0 0 24 29 1 #"\n"
0 0 17 3 99
(
 #";Esta funcion elimina el elemento dado de la lista suministrada, si "
 #"el elemento no esta en la lista"
) 0 0 24 29 1 #"\n"
0 0 17 3 40 #";se obtendra la misma lista sin cambios."
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Ejemplos:"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";Al ingresar (eliminar lista1 -2) se debe obtener (list 7 2 10 8 1 0"
 #")"
) 0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";Al ingresar (eliminar lista1 12) se debe obtener (list 7 2 10 -2 8 "
 #"1 0)"
) 0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";Al ingresar (eliminar lista2 'a) se debe obtener (list 'j 10 2 8 'b"
 #" 'x)"
) 0 0 24 29 1 #"\n"
0 0 17 3 55 #";Al ingresar (eliminar lista4 1) se debe obtener  empty"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";Al ingresar (eliminar lista6 -2) se debe obtener empty"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"eliminar"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                             [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"eliminar"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";Pruebas:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"eliminar"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"-2"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"eliminar"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista1"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"-2"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"eliminar"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"eliminar"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista6"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 107
(
 #";PUNTO 12___________________________________________________________"
 #"_______________________________________"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";buscar_orden: list element -> list"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";Proposito:"
0 0 24 29 1 #"\n"
0 0 17 3 97
(
 #";Esta funcion busca el elemento deseado en la lista sumistrada y lo "
 #"retorna como resultado, si el"
) 0 0 24 29 1 #"\n"
0 0 17 3 100
(
 #";elemento no se encuentra en la lista la funcion retornara empty. Es"
 #"ta funcion siempre recibe listas"
) 0 0 24 29 1 #"\n"
0 0 17 3 60
#";organizadas y los elementos siempre deben de ser numericos."
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Ejemplos:"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";Al ingresar (buscar_orden lista7 4) se debe obtener 4"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";Al ingresar (buscar_orden '()4) se debe obtener empty"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";Al ingresar (buscar_orden lista7 2) se debe obtener empty"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";Al ingresar (buscar_orden '(1) 2) se debe obtener empty"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";Al ingresar (buscar_orden lista2) se debe obtener empty"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";Al ingresar (buscar_orden lista1) se debe obtener empty"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"buscar_orden"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 14 3 4 #"null"
0 0 24 3 3 #"][("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #"("
0 0 14 3 9 #"ordenada?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 14 3 5 #"false"
0 0 24 3 2 #")("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #"("
0 0 14 3 16 #"cadenadenumeros?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 14 3 5 #"false"
0 0 24 3 3 #")) "
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                          [("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #")) "
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                          [("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #")) "
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                          [("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 4 #")) ("
0 0 14 3 12 #"buscar_orden"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 1 #"e"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                          [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #")) "
0 0 14 3 1 #"e"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                           )]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";Preubas:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"buscar_orden"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 2 #") "
0 0 21 3 1 #"9"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"buscar_orden"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista7"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"buscar_orden"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"buscar_orden"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista7"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"buscar_orden"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"buscar_orden"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista1"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 105
(
 #";___________________________________________________________________"
 #"_____________________________________"
) 0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";La siguiente es una funcion auxiliar que se utiliza en la funcion i"
 #"ndice"
) 0 0 24 29 1 #"\n"
0 0 17 3 9 #";Contrato"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";indice_aux: list element -> number"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";Proposito:"
0 0 24 29 1 #"\n"
0 0 17 3 91
(
 #";Esta funcion evalua el elemento dado y genera su posicion dentro de"
 #" la lista suministrada,"
) 0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";si el elemento no esta en la lista genera la posicion que deberia t"
 #"ener."
) 0 0 24 29 1 #"\n"
0 0 17 3 9 #";Ejemplo:"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";Al ingresar (indice_aux lista7 4) se debe obtener 1"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";Al ingresar (indice_aux '(1 2 3) 4) se debe obtener 3"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";Al ingresar (indice_aux lista6 4) se debe obtener 0"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";Al ingresar (indice_aux lista2 3) se debe obtener empty"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"indice_aux"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 21 3 1 #"0"
0 0 24 3 3 #"][("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #"("
0 0 14 3 9 #"ordenada?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 14 3 5 #"false"
0 0 24 3 2 #")("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #"("
0 0 14 3 16 #"cadenadenumeros?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 14 3 5 #"false"
0 0 24 3 3 #")) "
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                        [("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                        [("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 10 #"indice_aux"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 6 #")])]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";Pruebas:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #"("
0 0 14 3 10 #"indice_aux"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista7"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #"("
0 0 14 3 10 #"indice_aux"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #"("
0 0 14 3 10 #"indice_aux"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista6"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #"("
0 0 14 3 10 #"indice_aux"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #"("
0 0 14 3 10 #"indice_aux"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 24 29 1 #"\n"
0 0 17 3 106
(
 #";PUNTO 8____________________________________________________________"
 #"______________________________________"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";Contrato"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";indice: list element -> number"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";Proposito:"
0 0 24 29 1 #"\n"
0 0 17 3 122
(
 #";Esta funcion evalua el elemento dado y genera su posicion dentro de"
 #" la lista suministrada, esta lista debe estar ordenada"
) 0 0 24 29 1 #"\n"
0 0 17 3 125
(
 #";y debe estar compuesta unicamente por numeros, si el elemento no es"
 #"ta en la lista le suma uno a la poscion que deberia tener"
) 0 0 24 29 1 #"\n"
0 0 17 3 24 #";y lo multiplica por -1."
0 0 24 29 1 #"\n"
0 0 17 3 9 #";Ejemplo:"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";Al ingresar (indice lista7 4) se debe obtener 1"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";Al ingresar (indice '(1 2 3) 4) se debe obtener -4"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";Al ingresar (indice lista6 4) se debe obtener -1"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";Al ingresar (indice lista2 4) se debe obtener empty"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";Al ingresar (indice lista1 2) se debe obtener empty"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 21 3 2 #"-1"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                              [("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #"("
0 0 14 3 9 #"ordenada?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 14 3 5 #"false"
0 0 24 3 2 #")("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #"("
0 0 14 3 16 #"cadenadenumeros?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 14 3 5 #"false"
0 0 24 3 3 #")) "
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                              [("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"buscar_orden"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 14 3 1 #"e"
0 0 24 3 3 #") ("
0 0 14 3 10 #"indice_aux"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"indice_aux"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 8 #")))])]))"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";Pruebas:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"indice"
0 0 24 3 2 #"  "
0 0 14 3 6 #"lista7"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"indice"
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 2 #"-4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista6"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 2 #"-1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista8"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista2"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 2 #"-1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"indice"
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 21 3 2 #"23"
0 0 24 3 2 #") "
0 0 21 3 2 #"14"
0 0 24 3 2 #") "
0 0 21 3 2 #"-7"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 108
(
 #";___________________________________________________________________"
 #"________________________________________"
) 0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";La siguiente es una funcion auxliar que se utiliza en la funcion or"
 #"denar."
) 0 0 24 29 1 #"\n"
0 0 17 3 10 #";Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";posicion: list element -> number"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";Proposito:"
0 0 24 29 1 #"\n"
0 0 17 3 104
(
 #";Esta funcion evalua la lista dada y determina la posicion del eleme"
 #"nto suministrado dentro de la misma,"
) 0 0 24 29 1 #"\n"
0 0 17 3 43 #";sin importar si la lista es ordenada o no."
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Ejemplos:"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";Al ingresar (posicion lista1 7) se debe obtener 0"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";Al ingresar (posicion lista6 6) se debe obtener empty"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"posicion"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 14 3 4 #"null"
0 0 24 3 3 #"][("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #"("
0 0 14 3 16 #"cadenadenumeros?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                    [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 8 #"posicion"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 1 #"e"
0 0 24 3 7 #"))])]))"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";Pruebas:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"posicion"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista1"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"posicion"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista6"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 108
(
 #";___________________________________________________________________"
 #"________________________________________"
) 0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";La siguiente es una funcion auxliar que se utiliza en la funcion or"
 #"denar."
) 0 0 24 29 1 #"\n"
0 0 17 3 10 #";Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";menor: list -> numero"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";Proposito:"
0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";Esta funcion evalua la lista dada y retorna el elemento de menor va"
 #"lor dentro de esta,"
) 0 0 24 29 1 #"\n"
0 0 17 3 66
#";las listas suministradas solo deben estar compuestas por numeros."
0 0 24 29 1 #"\n"
0 0 17 3 9 #";Ejemplo:"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";Al ingresar (menor lista1) se debe obtener -2"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";Al ingresar (menor lista4) se debe obtener 1"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";Al ingresar (menor lista6) se debe obtener empty"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"menor"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #")("
0 0 15 3 4 #"cond"
0 0 24 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 14 3 4 #"null"
0 0 24 3 3 #"][("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #"("
0 0 14 3 16 #"cadenadenumeros?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                           [("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #"))("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #") ]"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                           [("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #") ("
0 0 14 3 5 #"menor"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 5 #"))) ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 5 #"menor"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 7 #"))])]))"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";Pruebas:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 5 #"menor"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista1"
0 0 24 3 2 #") "
0 0 21 3 2 #"-2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 5 #"menor"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista4"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 5 #"menor"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista6"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 106
(
 #";PUNTO 4____________________________________________________________"
 #"______________________________________"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";ordenar: list -> list"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";Porposito:"
0 0 24 29 1 #"\n"
0 0 17 3 111
(
 #";Esta funcion evalua la lista suministrada y genera la misma lista p"
 #"ero con los datos que la componen ordenados"
) 0 0 24 29 1 #"\n"
0 0 17 3 93
(
 #";de forma ascendente. Esta funcion recibe listas que esten compuesta"
 #"s unicamente por numeros."
) 0 0 24 29 1 #"\n"
0 0 17 3 10 #";Ejemplos:"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";Al ingresar (ordenar lista1) se debe obtener (list -2 0 1 2 7 8 10)"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";Al imgresar (ordenar lista4) se debe obtener (list 1 1 1 1 1 1 1)"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";Al ingresar (ordenar lista6) se debe obtener empty"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";Al imgresar (ordenar lista7) se debe obtener (list 1 4 6 7 8)"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";Al ingresar (ordenar lista2) se debe obtener empty"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ordenar"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                              [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #"("
0 0 14 3 16 #"cadenadenumeros?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ["
0 0 14 3 4 #"else"
0 0 24 3 1 #"("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                              [("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #")) "
0 0 14 3 5 #"lista"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 5 #"menor"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #") ("
0 0 14 3 7 #"ordenar"
0 0 24 3 2 #" ("
0 0 14 3 8 #"eliminar"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #" ("
0 0 14 3 8 #"posicion"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #" ("
0 0 14 3 5 #"menor"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 10 #")))))])]))"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";Pruebas:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ordenar"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista1"
0 0 24 3 2 #")("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 2 #"-2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ordenar"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista4"
0 0 24 3 2 #")("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ordenar"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista6"
0 0 24 3 1 #")"
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ordenar"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista7"
0 0 24 3 2 #")("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ordenar"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista2"
0 0 24 3 1 #")"
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 104
(
 #";-------------------------------------------------------------------"
 #"------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 120
(
 #";-----------------------------------------------------PARTE 2-------"
 #"----------------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 4 #"; 1:"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 47 #"; Cancion es una estructura cuyos atributos son"
0 0 24 29 1 #"\n"
0 0 17 3 39 #"; nombre, album, artista de tipo symbol"
0 0 24 29 1 #"\n"
0 0 17 3 37 #"; duracion y estrellas de tipo number"
0 0 24 29 1 #"\n"
0 0 17 3 38 #"; la duracion se establece en segundos"
0 0 24 29 1 #"\n"
0 0 17 3 47 #"; y el numero de estrellas debe ser entre 1 y 5"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 7 #"cancion"
0 0 24 3 2 #" ("
0 0 14 3 6 #"nombre"
0 0 24 3 1 #" "
0 0 14 3 5 #"album"
0 0 24 3 1 #" "
0 0 14 3 7 #"artista"
0 0 24 3 1 #" "
0 0 14 3 8 #"duracion"
0 0 24 3 1 #" "
0 0 14 3 9 #"estrellas"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 4 #"; 2:"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";instancias de la estructura cancion"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"cancion1"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-cancion"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 13 #"Paradise-City"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 24 #"Appetite-For-Destruction"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 10 #"GunsNRoses"
0 0 24 3 1 #" "
0 0 21 3 3 #"408"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"cancion2"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-cancion"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Angela"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"Cleopatra"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 13 #"The-Lumineers"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"cancion3"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-cancion"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"No-Way-No"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 19 #"Dont-Kill-The-Magic"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Magic!"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"cancion4"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-cancion"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"Rude"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"Rude"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Magic!"
0 0 24 3 1 #" "
0 0 21 3 3 #"210"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"cancion5"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-cancion"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"Grenade"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 18 #"Doo-Wops&Hooligans"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 10 #"Bruno-Mars"
0 0 24 3 1 #" "
0 0 21 3 3 #"212"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"cancion6"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-cancion"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"Sometimes"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 15 #"Dangerous-Woman"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 13 #"Ariana-Grande"
0 0 24 3 1 #" "
0 0 21 3 3 #"208"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"cancion7"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-cancion"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"Dangerous"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Scream"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 14 #"MichaelJakcson"
0 0 24 3 1 #" "
0 0 21 3 3 #"420"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"cancion8"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-cancion"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 10 #"In-the-End"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 13 #"Hybrid-Theory"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 11 #"Linkin-Park"
0 0 24 3 1 #" "
0 0 21 3 3 #"222"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"cancion9"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-cancion"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"Carmesi"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"A-la-mar"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 14 #"Vicente-Garcia"
0 0 24 3 1 #" "
0 0 21 3 3 #"180"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"cancion10"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-cancion"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"Ophelia"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"Cleopatra"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 13 #"The-Lumineers"
0 0 24 3 1 #" "
0 0 21 3 3 #"278"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"cancion11"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-cancion"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 11 #"Billie-Jean"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"Thriller"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 14 #"MichaelJackson"
0 0 24 3 1 #" "
0 0 21 3 3 #"240"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 82
(
 #";Canciones_favoritas es una lista que contiene instancias de la estr"
 #"uctura cancion"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 19 #"canciones_favoritas"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"cancion1"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                  "
0 0 14 3 8 #"cancion2"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                  "
0 0 14 3 8 #"cancion3"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                  "
0 0 14 3 8 #"cancion4"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                  "
0 0 14 3 8 #"cancion5"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                  "
0 0 14 3 8 #"cancion6"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                  "
0 0 14 3 8 #"cancion7"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                  "
0 0 14 3 8 #"cancion8"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                  "
0 0 14 3 8 #"cancion9"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                  "
0 0 14 3 9 #"cancion10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 105
(
 #";-------------------------------------------------------------------"
 #"-------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 13 #"; EJERCICIO 1"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; Funcion auxiliar"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 27 #"; artista: struct -> symbol"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #"; Proposito: Esta es una funcion auxiliar que permite extraer el art"
 #"ista"
) 0 0 24 29 1 #"\n"
0 0 17 3 43 #"; de una instancia de la estructura cancion"
0 0 24 29 1 #"\n"
0 0 17 3 62
#"; ejemplos: (artista cancion1) deberia de retornar 'GunsNRoses"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";           (artista cancion2) deberia de retornar 'The-Lumineers"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"artista"
0 0 24 3 1 #" "
0 0 14 3 7 #"cancion"
0 0 24 3 2 #")("
0 0 14 3 15 #"cancion-artista"
0 0 24 3 1 #" "
0 0 14 3 7 #"cancion"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";pruebas"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #"("
0 0 14 3 7 #"artista"
0 0 24 3 1 #" "
0 0 14 3 8 #"cancion1"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 10 #"GunsNRoses"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #"("
0 0 14 3 7 #"artista"
0 0 24 3 1 #" "
0 0 14 3 8 #"cancion2"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 13 #"The-Lumineers"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";-------------------------------------------------------------------"
 #"------"
) 0 0 24 29 1 #"\n"
0 0 17 3 18 #"; Funcion auxiliar"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 26 #"; nombre: struct -> symbol"
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #"; Proposito: Esta es una funcion auxiliar que permite extraer el nom"
 #"bre"
) 0 0 24 29 1 #"\n"
0 0 17 3 43 #"; de una instancia de la estructura cancion"
0 0 24 29 1 #"\n"
0 0 17 3 64
#"; ejemplos: (nombre cancion1) deberia de retornar 'Paradise-City"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";           (nombre cancion2) deberia de retornar 'Angela"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"nombre"
0 0 24 3 1 #" "
0 0 14 3 7 #"cancion"
0 0 24 3 2 #")("
0 0 14 3 14 #"cancion-nombre"
0 0 24 3 1 #" "
0 0 14 3 7 #"cancion"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";pruebas"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #"("
0 0 14 3 6 #"nombre"
0 0 24 3 1 #" "
0 0 14 3 8 #"cancion1"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 13 #"Paradise-City"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #"("
0 0 14 3 6 #"nombre"
0 0 24 3 1 #" "
0 0 14 3 8 #"cancion2"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Angela"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";-------------------------------------------------------------------"
 #"---"
) 0 0 24 29 1 #"\n"
0 0 17 3 18 #"; Funcion auxiliar"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 26 #"; nombre: struct -> symbol"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #"; Proposito: Esta es una funcion auxiliar que permite extraer el alb"
 #"um"
) 0 0 24 29 1 #"\n"
0 0 17 3 43 #"; de una instancia de la estructura cancion"
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #"; ejemplos: (album cancion1) deberia de retornar 'Appetite-For-Destr"
 #"uction"
) 0 0 24 29 1 #"\n"
0 0 17 3 59
#";           (album cancion2) deberia de retornar 'Cleopatra"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"album"
0 0 24 3 1 #" "
0 0 14 3 7 #"cancion"
0 0 24 3 2 #")("
0 0 14 3 13 #"cancion-album"
0 0 24 3 1 #" "
0 0 14 3 7 #"cancion"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";pruebas"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #"("
0 0 14 3 5 #"album"
0 0 24 3 1 #" "
0 0 14 3 8 #"cancion1"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 24 #"Appetite-For-Destruction"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #"("
0 0 14 3 5 #"album"
0 0 24 3 1 #" "
0 0 14 3 8 #"cancion2"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 9 #"Cleopatra"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #";-------------------------------------------------------------------"
 #"----------"
) 0 0 24 29 1 #"\n"
0 0 17 3 18 #"; Funcion auxiliar"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 26 #"; nombre: struct -> number"
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #"; Proposito: Esta es una funcion auxiliar que permite extraer la dur"
 #"acion"
) 0 0 24 29 1 #"\n"
0 0 17 3 43 #"; de una instancia de la estructura cancion"
0 0 24 29 1 #"\n"
0 0 17 3 55 #"; ejemplos: (duracion cancion1) deberia de retornar 408"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";           (duracion cancion2) deberia de retornar 200"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"duracion"
0 0 24 3 1 #" "
0 0 14 3 7 #"cancion"
0 0 24 3 3 #") ("
0 0 14 3 16 #"cancion-duracion"
0 0 24 3 1 #" "
0 0 14 3 7 #"cancion"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";pruebas"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #"("
0 0 14 3 8 #"duracion"
0 0 24 3 1 #" "
0 0 14 3 8 #"cancion1"
0 0 24 3 2 #") "
0 0 21 3 3 #"408"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #"("
0 0 14 3 8 #"duracion"
0 0 24 3 1 #" "
0 0 14 3 8 #"cancion2"
0 0 24 3 2 #") "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";-------------------------------------------------------------------"
 #"------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 18 #"; Funcion auxiliar"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 26 #"; nombre: struct -> number"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #"; Proposito: Esta es una funcion auxiliar que permite extraer las es"
 #"trellas"
) 0 0 24 29 1 #"\n"
0 0 17 3 43 #"; de una instancia de la estructura cancion"
0 0 24 29 1 #"\n"
0 0 17 3 54 #"; ejemplos: (estrellas cancion1) deberia de retornar 4"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";           (estrellas cancion2) deberia de retornar 1"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"estrellas"
0 0 24 3 1 #" "
0 0 14 3 7 #"cancion"
0 0 24 3 3 #") ("
0 0 14 3 17 #"cancion-estrellas"
0 0 24 3 1 #" "
0 0 14 3 7 #"cancion"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";pruebas"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #"("
0 0 14 3 9 #"estrellas"
0 0 24 3 1 #" "
0 0 14 3 8 #"cancion1"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #"("
0 0 14 3 9 #"estrellas"
0 0 24 3 1 #" "
0 0 14 3 8 #"cancion2"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";-------------------------------------------------------------------"
 #"------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #"; FUNCION PRINCIPAL EJERCICIO 1"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 47 #"; busquedanombre_cancion: list struct -> struct"
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #"; Proposito: Esta funcion busca una cancion por el nombre de la canc"
 #"ion"
) 0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #"; si el nombre dado corresponde al nombre de alguna de las estructur"
 #"as de la lista,"
) 0 0 24 29 1 #"\n"
0 0 17 3 45 #"; la funcion arroja la estructura respectiva,"
0 0 24 29 1 #"\n"
0 0 17 3 31 #"; si no, la funcion arroja null"
0 0 24 29 1 #"\n"
0 0 17 3 110
(
 #"; Ejemplos: (busquedanombre_cancion canciones_favoritas 'Grenade)deb"
 #"eria de retornar la estructura de cancion5"
) 0 0 24 29 1 #"\n"
0 0 17 3 110
(
 #";          (busquedanombre_cancion canciones_favoritas 'Carmesi) deb"
 #"eria de retornar la estructura de cancion9"
) 0 0 24 29 1 #"\n"
0 0 17 3 93
(
 #";          (busquedanombre_cancion canciones_favoritas 'Billie-Jean)"
 #" deberia de retornar null"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 22 #"busquedanombre_cancion"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #" "
0 0 14 3 7 #"nombres"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 55 #"                                                     [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 7 #"nombres"
0 0 24 3 2 #" ("
0 0 14 3 6 #"nombre"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 5 #"))) ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 54 #"                                                     ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 22 #"busquedanombre_cancion"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 7 #"nombres"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";pruebas"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #"("
0 0 14 3 22 #"busquedanombre_cancion"
0 0 24 3 1 #" "
0 0 14 3 19 #"canciones_favoritas"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"Grenade"
0 0 24 3 2 #") "
0 0 14 3 8 #"cancion5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #"("
0 0 14 3 22 #"busquedanombre_cancion"
0 0 24 3 1 #" "
0 0 14 3 19 #"canciones_favoritas"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"Carmesi"
0 0 24 3 2 #") "
0 0 14 3 8 #"cancion9"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #"("
0 0 14 3 22 #"busquedanombre_cancion"
0 0 24 3 1 #" "
0 0 14 3 19 #"canciones_favoritas"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 11 #"Billie-Jean"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 22 #"busquedanombre_cancion"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 14 3 4 #"Rude"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 90
(
 #";-------------------------------------------------------------------"
 #"----------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 13 #"; EJERCICIO 2"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 38 #"; busqueda_artista: list symbol-> list"
0 0 24 29 1 #"\n"
0 0 17 3 58
#"; Proposito: Esta funcion busca una cancion por el artista"
0 0 24 29 1 #"\n"
0 0 17 3 85
(
 #"; si el artista dado corresponde al artista de alguna de las estruct"
 #"uras de la lista,"
) 0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #"; la funcion arroja una lista con las canciones respectivas al artis"
 #"ta dado"
) 0 0 24 29 1 #"\n"
0 0 17 3 31 #"; si no, la funcion arroja null"
0 0 24 29 1 #"\n"
0 0 17 3 108
(
 #"; ejemplos: (busqueda_artista canciones_favoritas 'GunsNRoses) deber"
 #"ia de retornar una lista con la cancion1"
) 0 0 24 29 1 #"\n"
0 0 17 3 126
(
 #";           (busqueda_artista canciones_favoritas 'The-Lumineers) de"
 #"beria de retornar una lista con la cancion2 y la cancion10"
) 0 0 24 29 1 #"\n"
0 0 17 3 115
(
 #";           (busqueda_artista canciones_favoritas ''Michael-Jackson)"
 #" deberia de retornar una lista con la cancion7 "
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"busqueda_artista"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #" "
0 0 14 3 8 #"artistas"
0 0 24 3 2 #")("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                          [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                          [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 8 #"artistas"
0 0 24 3 2 #" ("
0 0 14 3 7 #"artista"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #"("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #"))("
0 0 14 3 16 #"busqueda_artista"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 8 #"artistas"
0 0 24 3 4 #")) ]"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 16 #"busqueda_artista"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 8 #"artistas"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";pruebas"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"busqueda_artista"
0 0 24 3 1 #" "
0 0 14 3 19 #"canciones_favoritas"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 10 #"GunsNRoses"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"cancion1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"busqueda_artista"
0 0 24 3 1 #" "
0 0 14 3 19 #"canciones_favoritas"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 14 #"MichaelJakcson"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"cancion7"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"busqueda_artista"
0 0 24 3 1 #" "
0 0 14 3 19 #"canciones_favoritas"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 13 #"The-Lumineers"
0 0 24 3 2 #")("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"cancion2"
0 0 24 3 1 #" "
0 0 14 3 9 #"cancion10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"busqueda_artista"
0 0 24 3 1 #" "
0 0 14 3 19 #"canciones_favoritas"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Magic!"
0 0 24 3 2 #")("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"cancion3"
0 0 24 3 1 #" "
0 0 14 3 8 #"cancion4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"busqueda_artista"
0 0 24 3 1 #" "
0 0 14 3 19 #"canciones_favoritas"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Eminem"
0 0 24 3 1 #")"
0 0 14 3 4 #"null"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"busqueda_artista"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Magic!"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 128
(
 #";-------------------------------------------------------------------"
 #"------------------------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 12 #";EJERCICIO 3"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; Funcion auxiliar"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 40 #"; duracion-total-segundos: list-> number"
0 0 24 29 1 #"\n"
0 0 17 3 96
(
 #"; Proposito: Esta funcion auxiliar averigua la duracion total en seg"
 #"undos de todas las canciones"
) 0 0 24 29 1 #"\n"
0 0 17 3 14 #"; de una lista"
0 0 24 29 1 #"\n"
0 0 17 3 81
(
 #"; ejemplo: (duracion-total-segundos canciones_favoritas) deberia de "
 #"retornar 2638"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 23 #"duracion-total-segundos"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                          [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                          [("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"duracion"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #"("
0 0 14 3 8 #"duracion"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 4 #")) ("
0 0 14 3 23 #"duracion-total-segundos"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";pruebas"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #"("
0 0 14 3 23 #"duracion-total-segundos"
0 0 24 3 1 #" "
0 0 14 3 19 #"canciones_favoritas"
0 0 24 3 2 #") "
0 0 21 3 4 #"2638"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #"("
0 0 14 3 23 #"duracion-total-segundos"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 14 3 4 #"null"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 121
(
 #";-------------------------------------------------------------------"
 #"-----------------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 18 #"; Funcion auxiliar"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 26 #"; segundos: list -> number"
0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #"; Proposito: Esta funcion auxiliar transforma los segundos totales d"
 #"e la lista"
) 0 0 24 29 1 #"\n"
0 0 17 3 48 #"; para el posterior uso en el formato solicitado"
0 0 24 29 1 #"\n"
0 0 17 3 64
#"; ejemplo: (segundos canciones_favoritas) deberia de retornar 58"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"segundos"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                           [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ["
0 0 14 3 4 #"else"
0 0 24 3 1 #"("
0 0 14 3 9 #"remainder"
0 0 24 3 2 #" ("
0 0 14 3 23 #"duracion-total-segundos"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 21 3 2 #"60"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";pruebas"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"segundos"
0 0 24 3 1 #" "
0 0 14 3 19 #"canciones_favoritas"
0 0 24 3 2 #") "
0 0 21 3 2 #"58"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"segundos"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 14 3 4 #"null"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";-------------------------------------------------------------------"
 #"-------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 18 #"; Funcion auxiliar"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 26 #"; segundos: list -> number"
0 0 24 29 1 #"\n"
0 0 17 3 92
(
 #"; Proposito: Esta funcion auxiliar transforma los segundos totales d"
 #"e las lista, en minutos "
) 0 0 24 29 1 #"\n"
0 0 17 3 48 #"; para el posterior uso en el formato solicitado"
0 0 24 29 1 #"\n"
0 0 17 3 63
#"; ejemplo: (minutos canciones_favoritas) deberia de retornar 43"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"minutos"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ["
0 0 14 3 4 #"else"
0 0 24 3 1 #"("
0 0 14 3 5 #"floor"
0 0 24 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 1 #"("
0 0 14 3 23 #"duracion-total-segundos"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 21 3 2 #"60"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";pruebas"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"minutos"
0 0 24 3 1 #" "
0 0 14 3 19 #"canciones_favoritas"
0 0 24 3 1 #")"
0 0 21 3 2 #"43"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"minutos"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 14 3 4 #"null"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 88
(
 #";-------------------------------------------------------------------"
 #"--------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 18 #"; Funcion auxiliar"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 26 #"; segundos: list -> number"
0 0 24 29 1 #"\n"
0 0 17 3 89
(
 #"; Proposito: Esta funcion auxiliar transforma los segundos totales d"
 #"e la lista, en horas "
) 0 0 24 29 1 #"\n"
0 0 17 3 48 #"; para el posterior uso en el formato solicitado"
0 0 24 29 1 #"\n"
0 0 17 3 60
#"; ejemplo: (horas canciones_favoritas) deberia de retornar 0"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"horas"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                        [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ["
0 0 14 3 4 #"else"
0 0 24 3 1 #"("
0 0 14 3 5 #"floor"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #"("
0 0 14 3 23 #"duracion-total-segundos"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 21 3 4 #"3600"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";pruebas"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #"("
0 0 14 3 5 #"horas"
0 0 24 3 1 #" "
0 0 14 3 19 #"canciones_favoritas"
0 0 24 3 1 #")"
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #"("
0 0 14 3 5 #"horas"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 14 3 4 #"null"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 89
(
 #";-------------------------------------------------------------------"
 #"---------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #"; FUNCION PRINCIPAL EJERCICIO 3"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 32 #"; duracion-lista: list -> string"
0 0 24 29 1 #"\n"
0 0 17 3 84
(
 #"; Proposito: Esta funcion permite expresar la duraci\303\263n de la "
 #"lista de reproducci\303\263n"
) 0 0 24 29 1 #"\n"
0 0 17 3 98
(
 #"; en el formato \342\200\234horas:minutos:segundos\342\200\235,utili"
 #"zando funciones auxiliares definidas previamente"
) 0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #"; ejemplo: (duracion-lista canciones_favoritas) deberia de retornar "
 #"\"0:43:58\""
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #"("
0 0 14 3 14 #"duracion-lista"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ["
0 0 14 3 4 #"else"
0 0 24 3 1 #"("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 5 #"horas"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #")) "
0 0 19 3 3 #"\":\""
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                    ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 7 #"minutos"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #"))"
0 0 19 3 3 #"\":\""
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                    ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 8 #"segundos"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 17 3 9 #"; pruebas"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #"("
0 0 14 3 14 #"duracion-lista"
0 0 24 3 1 #" "
0 0 14 3 19 #"canciones_favoritas"
0 0 24 3 1 #")"
0 0 19 3 9 #"\"0:43:58\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #"("
0 0 14 3 14 #"duracion-lista"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 14 3 4 #"null"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 127
(
 #";-------------------------------------------------------------------"
 #"-----------------------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 13 #"; EJERCICIO 4"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 35 #"; canciones-2estrellas: list-> list"
0 0 24 29 1 #"\n"
0 0 17 3 56 #"; Proposito: Esta funcion crea una lista de reproduccion"
0 0 24 29 1 #"\n"
0 0 17 3 65
#"; con todas las canciones que hayan sido calificadas por lo menos"
0 0 24 29 1 #"\n"
0 0 17 3 17 #"; con 2 estrellas"
0 0 24 29 1 #"\n"
0 0 17 3 89
(
 #"; ejemplo: (canciones-2estrellas canciones_favoritas) deberia de ret"
 #"ornar  (list cancion1"
) 0 0 24 29 1 #"\n"
0 0 17 3 90
(
 #";                                                                   "
 #"              cancion3"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 17 3 89
(
 #";                                                                   "
 #"             cancion4"
) 0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 88
(
 #";                                                                   "
 #"            cancion5"
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 87
(
 #";                                                                   "
 #"           cancion6"
) 0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 86
(
 #";                                                                   "
 #"          cancion7"
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 17 3 85
(
 #";                                                                   "
 #"         cancion8"
) 0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 85
(
 #";                                                                   "
 #"        cancion9)"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"canciones-2estrellas"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       [("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 9 #"estrellas"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 4 #")  )"
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 6 #"append"
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 4 #")) ("
0 0 14 3 20 #"canciones-2estrellas"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 20 #"canciones-2estrellas"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";pruebas"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #"("
0 0 14 3 20 #"canciones-2estrellas"
0 0 24 3 1 #" "
0 0 14 3 19 #"canciones_favoritas"
0 0 24 3 2 #")("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"cancion1"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                             "
0 0 14 3 8 #"cancion3"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                             "
0 0 14 3 8 #"cancion4"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                             "
0 0 14 3 8 #"cancion5"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                             "
0 0 14 3 8 #"cancion6"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                             "
0 0 14 3 8 #"cancion7"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                             "
0 0 14 3 8 #"cancion8"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                             "
0 0 14 3 8 #"cancion9"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #"("
0 0 14 3 20 #"canciones-2estrellas"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 14 3 4 #"null"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 106
(
 #";-------------------------------------------------------------------"
 #"--------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; EJERCICIO 5"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 35 #"; canciones-5estrellas: list-> list"
0 0 24 29 1 #"\n"
0 0 17 3 56 #"; Proposito: Esta funcion crea una lista de reproduccion"
0 0 24 29 1 #"\n"
0 0 17 3 53 #"; con todas las canciones que hayan sido calificadas "
0 0 24 29 1 #"\n"
0 0 17 3 17 #"; con 5 estrellas"
0 0 24 29 1 #"\n"
0 0 17 3 143
(
 #"; ejemplo: (canciones-5estrellas canciones_favoritas) deberia de ret"
 #"ornar  (list cancion3 cancion8)                                     "
 #"       "
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"canciones-5estrellas"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 9 #"estrellas"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 4 #")  )"
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 6 #"append"
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 4 #")) ("
0 0 14 3 20 #"canciones-5estrellas"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 20 #"canciones-5estrellas"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";pruebas"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"canciones-5estrellas"
0 0 24 3 1 #" "
0 0 14 3 19 #"canciones_favoritas"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"cancion3"
0 0 24 3 1 #" "
0 0 14 3 8 #"cancion8"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"canciones-5estrellas"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 14 3 4 #"null"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 117
(
 #";-------------------------------------------------------------------"
 #"-------------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; EJERCICIO 6"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #"; Estructura Auxiliar"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 52 #"; cancion-titulo-duracion es una estructura auxiliar"
0 0 24 29 1 #"\n"
0 0 17 3 45 #"; cuyos parametros son nombre de tipo 'symbol"
0 0 24 29 1 #"\n"
0 0 17 3 27 #"; y duracion de tipo number"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 23 #"cancion-titulo-duracion"
0 0 24 3 2 #" ("
0 0 14 3 6 #"nombre"
0 0 24 3 1 #" "
0 0 14 3 8 #"duracion"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #"; FUNCION DEL EJERCICIO 6"
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; Contrato"
0 0 24 29 1 #"\n"
0 0 17 3 32 #"; titulos-duracion: list -> list"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #"; Proposito: Esta funcion imprime una lista con solo los titulos y l"
 #"as canciones"
) 0 0 24 29 1 #"\n"
0 0 17 3 18 #"; de la lista dada"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #"; ejemplos: (titulos-duracion canciones_favoritas) deberia de retorn"
 #"ar"
) 0 0 24 29 1 #"\n"
0 0 17 3 6 #";(list"
0 0 24 29 1 #"\n"
0 0 17 3 51 #"; (make-cancion-titulo-duracion 'Paradise-City 408)"
0 0 24 29 1 #"\n"
0 0 17 3 44 #"; (make-cancion-titulo-duracion 'Angela 200)"
0 0 24 29 1 #"\n"
0 0 17 3 47 #"; (make-cancion-titulo-duracion 'No-Way-No 300)"
0 0 24 29 1 #"\n"
0 0 17 3 42 #"; (make-cancion-titulo-duracion 'Rude 210)"
0 0 24 29 1 #"\n"
0 0 17 3 45 #"; (make-cancion-titulo-duracion 'Grenade 212)"
0 0 24 29 1 #"\n"
0 0 17 3 47 #"; (make-cancion-titulo-duracion 'Sometimes 208)"
0 0 24 29 1 #"\n"
0 0 17 3 47 #"; (make-cancion-titulo-duracion 'Dangerous 420)"
0 0 24 29 1 #"\n"
0 0 17 3 48 #"; (make-cancion-titulo-duracion 'In-the-End 222)"
0 0 24 29 1 #"\n"
0 0 17 3 45 #"; (make-cancion-titulo-duracion 'Carmesi 180)"
0 0 24 29 1 #"\n"
0 0 17 3 46 #"; (make-cancion-titulo-duracion 'Ophelia 278))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"titulos-duracion"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                   [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 28 #"make-cancion-titulo-duracion"
0 0 24 3 1 #"("
0 0 14 3 6 #"nombre"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"duracion"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                 ("
0 0 14 3 16 #"titulos-duracion"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";pruebas"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"titulos-duracion"
0 0 24 3 1 #" "
0 0 14 3 19 #"canciones_favoritas"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 28 #"make-cancion-titulo-duracion"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 13 #"Paradise-City"
0 0 24 3 1 #" "
0 0 21 3 3 #"408"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 28 #"make-cancion-titulo-duracion"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Angela"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 28 #"make-cancion-titulo-duracion"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"No-Way-No"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 28 #"make-cancion-titulo-duracion"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"Rude"
0 0 24 3 1 #" "
0 0 21 3 3 #"210"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 28 #"make-cancion-titulo-duracion"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"Grenade"
0 0 24 3 1 #" "
0 0 21 3 3 #"212"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 28 #"make-cancion-titulo-duracion"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"Sometimes"
0 0 24 3 1 #" "
0 0 21 3 3 #"208"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 28 #"make-cancion-titulo-duracion"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"Dangerous"
0 0 24 3 1 #" "
0 0 21 3 3 #"420"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 28 #"make-cancion-titulo-duracion"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 10 #"In-the-End"
0 0 24 3 1 #" "
0 0 21 3 3 #"222"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 28 #"make-cancion-titulo-duracion"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"Carmesi"
0 0 24 3 1 #" "
0 0 21 3 3 #"180"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 28 #"make-cancion-titulo-duracion"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"Ophelia"
0 0 24 3 1 #" "
0 0 21 3 3 #"278"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"titulos-duracion"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 14 3 4 #"null"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 113
(
 #";-------------------------------------------------------------------"
 #"---------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; EJERCICIO 7"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; Funcion Auxiliar"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 41 #"; buscar-posicion: list number -> element"
0 0 24 29 1 #"\n"
0 0 17 3 63
#"; Proposito: Esta funcion auxiliar permite averiguar el n-esimo"
0 0 24 29 1 #"\n"
0 0 17 3 23 #"; elemento de una lista"
0 0 24 29 1 #"\n"
0 0 17 3 67
#"; ejemplos: (buscar-posicion (list 1 2 5 6) 2) deberia de arrojar 5"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";           (buscar-posicion (list 1 'a 5 'r) 3) deberia de arrojar "
 #"'r     "
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"buscar-posicion"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #")("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                   [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                   [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                   [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 8 #"longitud"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 1 #"n"
0 0 24 3 3 #"))("
0 0 14 3 15 #"buscar-posicion"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";pruebas"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"buscar-posicion"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"buscar-posicion"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"buscar-posicion"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"buscar-posicion"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"buscar-posicion"
0 0 24 3 1 #" "
0 0 14 3 19 #"canciones_favoritas"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 14 3 8 #"cancion4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 116
(
 #";-------------------------------------------------------------------"
 #"------------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; Funcion Auxiliar"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 34 #"; posicione: list number -> number"
0 0 24 29 1 #"\n"
0 0 17 3 92
(
 #"; Proposito: Esta funcion auxiliar permite averiguar la posicion en "
 #"la lista de reproduccion"
) 0 0 24 29 1 #"\n"
0 0 17 3 67
#"; en la que se encuentra la cancion con el numero de estrellas dado"
0 0 24 29 1 #"\n"
0 0 17 3 67
#"; ejemplos: (posicione canciones_favoritas 4)  deberia de arrojar 0"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";           (posicione canciones_favoritas 2) deberia de arrojar 4 "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"posicione"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #" ("
0 0 14 3 9 #"estrellas"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"0"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"posicione"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 1 #"e"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";pruebas"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"posicione"
0 0 24 3 1 #" "
0 0 14 3 19 #"canciones_favoritas"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #"("
0 0 14 3 9 #"posicione"
0 0 24 3 1 #" "
0 0 14 3 19 #"canciones_favoritas"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"posicione"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 116
(
 #";-------------------------------------------------------------------"
 #"------------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; Funcion Auxiliar"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 25 #"; posicione: list -> list"
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #"; Proposito: Esta funcion auxiliar permite crear una lista con solo "
 #"las"
) 0 0 24 29 1 #"\n"
0 0 17 3 50 #"; estrellas respectivas a la lista de reproduccion"
0 0 24 29 1 #"\n"
0 0 17 3 95
(
 #"; ejemplos: (estrellaslista canciones_favoritas)  deberia de arrojar"
 #" (list 4 1 5 4 2 3 4 5 3 1)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"estrellaslista"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                 [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"estrellas"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 5 #"))) ("
0 0 14 3 14 #"estrellaslista"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";pruebas"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"estrellaslista"
0 0 24 3 1 #" "
0 0 14 3 19 #"canciones_favoritas"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"estrellaslista"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 14 3 4 #"null"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 115
(
 #";-------------------------------------------------------------------"
 #"-----------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 34 #"; FUNCION PRINCIPAL DE EJERCICIO 7"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 26 #"; mejorapeor: list -> list"
0 0 24 29 1 #"\n"
0 0 17 3 64
#"; Proposito: Esta funcion crea una lista de mejor a peor cancion"
0 0 24 29 1 #"\n"
0 0 17 3 58
#"; esto lo realiza evaluando las estrellas de la lista dada"
0 0 24 29 1 #"\n"
0 0 17 3 53 #"; y posteriormente ordenandolas de manera descendente"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #"; para lograr el objetivo se utilizan las funciones ,definidas previ"
 #"amente,"
) 0 0 24 29 1 #"\n"
0 0 17 3 64
#"; buscar-posicion,mayor,eliminar y posicione, de manera auxiliar"
0 0 24 29 1 #"\n"
0 0 17 3 61
#"; ejemplos: (mejorapeor canciones_favoritas) deberia retornar"
0 0 24 29 1 #"\n"
0 0 17 3 98
(
 #";(list cancion3 cancion8 cancion1 cancion4 cancion7 cancion6 cancion"
 #"9 cancion5 cancion2 cancion10)"
) 0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                  "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"mejorapeor"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                             [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #"("
0 0 14 3 15 #"buscar-posicion"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #" ("
0 0 14 3 9 #"posicione"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #" ("
0 0 14 3 5 #"mayor"
0 0 24 3 2 #" ("
0 0 14 3 14 #"estrellaslista"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 10 #"mejorapeor"
0 0 24 3 2 #" ("
0 0 14 3 8 #"eliminar"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #" ("
0 0 14 3 9 #"posicione"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #" ("
0 0 14 3 5 #"mayor"
0 0 24 3 2 #" ("
0 0 14 3 14 #"estrellaslista"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 9 #"))))))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";pruebas"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #"("
0 0 14 3 10 #"mejorapeor"
0 0 24 3 1 #" "
0 0 14 3 19 #"canciones_favoritas"
0 0 24 3 2 #")("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"cancion3"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                   "
0 0 14 3 8 #"cancion8"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                   "
0 0 14 3 8 #"cancion1"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                   "
0 0 14 3 8 #"cancion4"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                   "
0 0 14 3 8 #"cancion7"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                   "
0 0 14 3 8 #"cancion6"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                   "
0 0 14 3 8 #"cancion9"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                   "
0 0 14 3 8 #"cancion5"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                   "
0 0 14 3 8 #"cancion2"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                   "
0 0 14 3 9 #"cancion10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"mejorapeor"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 14 3 4 #"null"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 125
(
 #";-------------------------------------------------------------------"
 #"---------------------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #"; EJERCICIO8"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 32 #"; eliminar-cancion: list -> list"
0 0 24 29 1 #"\n"
0 0 17 3 64
#"; Proposito: Esta funcion elimina la n-esima cancion de la lista"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #"; entregada, para esto utilizamos la funcion eliminar de manera auxi"
 #"liar"
) 0 0 24 29 1 #"\n"
0 0 17 3 62
#"; ejemplos : (eliminar canciones_favoritas 3) deberia retornar"
0 0 24 29 1 #"\n"
0 0 17 3 101
(
 #";            (list cancion1 cancion2 cancion3 cancion5 cancion6 canc"
 #"ion7 cancion8 cancion9 cancion10)"
) 0 0 24 29 1 #"\n"
0 0 17 3 62
#";            (eliminar canciones_favoritas 5) deberia retornar"
0 0 24 29 1 #"\n"
0 0 17 3 101
(
 #";            (list cancion1 cancion2 cancion3 cancion4 cancion5 canc"
 #"ion7 cancion8 cancion9 cancion10)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"eliminar-cancion"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #" "
0 0 14 3 8 #"posicion"
0 0 24 3 3 #") ("
0 0 14 3 8 #"eliminar"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #" "
0 0 14 3 8 #"posicion"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";pruebas"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"eliminar"
0 0 24 3 1 #" "
0 0 14 3 19 #"canciones_favoritas"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"cancion1"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                     "
0 0 14 3 8 #"cancion2"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                     "
0 0 14 3 8 #"cancion3"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                     "
0 0 14 3 8 #"cancion5"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                     "
0 0 14 3 8 #"cancion6"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                     "
0 0 14 3 8 #"cancion7"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                     "
0 0 14 3 8 #"cancion8"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                     "
0 0 14 3 8 #"cancion9"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                     "
0 0 14 3 9 #"cancion10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"eliminar"
0 0 24 3 1 #" "
0 0 14 3 19 #"canciones_favoritas"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"cancion1"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                     "
0 0 14 3 8 #"cancion2"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                     "
0 0 14 3 8 #"cancion3"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                     "
0 0 14 3 8 #"cancion4"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                     "
0 0 14 3 8 #"cancion5"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                     "
0 0 14 3 8 #"cancion7"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                     "
0 0 14 3 8 #"cancion8"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                     "
0 0 14 3 8 #"cancion9"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                     "
0 0 14 3 9 #"cancion10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"eliminar"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 115
(
 #";-------------------------------------------------------------------"
 #"-----------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 130
(
 #";PARTE 3____________________________________________________________"
 #"______________________________________________________________"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";EJERCICIO 1"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";Estructura para almacenar productos"
0 0 24 29 1 #"\n"
0 0 17 3 94
(
 #";Almacena los productos con un nombre (string), costo (number) y exi"
 #"stencias de este (number)."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 8 #"producto"
0 0 24 3 2 #" ("
0 0 14 3 6 #"nombre"
0 0 24 3 1 #" "
0 0 14 3 5 #"costo"
0 0 24 3 1 #" "
0 0 14 3 11 #"existencias"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Intancias"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"carro"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-producto"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"carro\""
0 0 24 3 1 #" "
0 0 21 3 4 #"5000"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"barbie"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-producto"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"barbie\""
0 0 24 3 1 #" "
0 0 21 3 5 #"10000"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"maxs"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-producto"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"max-steel\""
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"maxs2"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-producto"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"max-steel2\""
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"maxs3"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-producto"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"max-steel3\""
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"maxs4"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-producto"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"max-steel4\""
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 5 #"carro"
0 0 24 3 1 #" "
0 0 14 3 6 #"barbie"
0 0 24 3 1 #" "
0 0 14 3 4 #"maxs"
0 0 24 3 1 #" "
0 0 14 3 5 #"maxs2"
0 0 24 3 1 #" "
0 0 14 3 5 #"maxs3"
0 0 24 3 1 #" "
0 0 14 3 5 #"maxs4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"l2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 5 #"carro"
0 0 24 3 1 #" "
0 0 14 3 4 #"maxs"
0 0 24 3 1 #" "
0 0 14 3 5 #"maxs2"
0 0 24 3 1 #" "
0 0 14 3 5 #"maxs3"
0 0 24 3 1 #" "
0 0 14 3 5 #"maxs4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";menosde10: list -> list"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";Prop\303\263sito:"
0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #";Al entrar una lista de juguetes, crea una nueva lista con los que t"
 #"engan un precio"
) 0 0 24 29 1 #"\n"
0 0 17 3 12 #";menor a 10."
0 0 24 29 1 #"\n"
0 0 17 3 47 #";Ejemplo: (menosde10 '((make-producto \"e\" 2 50)"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";                      (make-producto \"f\" 11 50)"
0 0 24 29 1 #"\n"
0 0 17 3 107
(
 #";                      (make-producto \"t\" 3 50)))   -> '((make-pro"
 #"ducto \"t\" 3 50) (make-producto \"e\" 2 50))"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"menosde10"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                            [("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 14 #"producto-costo"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 21 3 2 #"10"
0 0 24 3 3 #") ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 9 #"menosde10"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 9 #"menosde10"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";Pruebas"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"menosde10"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-producto"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"max-steel3\""
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-producto"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"max-steel\""
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"menosde10"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 113
(
 #";-------------------------------------------------------------------"
 #"---------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";EJERCICIO 2"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";nombre->precio: list number -> number"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";Prop\303\263sito:"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";Hallar el precio de un juguete mediante su nombre."
0 0 24 29 1 #"\n"
0 0 17 3 50 #";Ejemplos: (nombre->precio l1 \"max-steel2\") -> 100"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";          (nombre->precio l1 \"max-steel4\") -> 20"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"nombre->precio"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                   [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #" ("
0 0 14 3 15 #"producto-nombre"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 5 #"))) ("
0 0 14 3 14 #"producto-costo"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 14 #"nombre->precio"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 1 #"n"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";Pruebas"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"nombre->precio"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"carro\""
0 0 24 3 2 #") "
0 0 21 3 4 #"5000"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"nombre->precio"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"max-steel\""
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"nombre->precio"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"max-steel\""
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 113
(
 #";-------------------------------------------------------------------"
 #"---------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";EJERCICIO 3"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";vereficarunidades: list number -> boolean"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Pr\303\263sito:"
0 0 24 29 1 #"\n"
0 0 17 3 92
(
 #";Revisa si los productos tienen existencias (existencias mayor a cer"
 #"o) por medio del nombre."
) 0 0 24 29 1 #"\n"
0 0 17 3 47 #";Ejemplos: (verificarunidades l1 \"carro\") -> #t"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";          (verificarunidades l1 \"max-steel2\") -> #f"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"verificarunidades"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                      [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"producto-nombre"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 20 #"producto-existencias"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                      [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"producto-nombre"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 20 #"producto-existencias"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 17 #"verificarunidades"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 1 #"n"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";Pruebas"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"verificarunidades"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"carro\""
0 0 24 3 2 #") "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"verificarunidades"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"max-steel2\""
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"verificarunidades"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"max-steel2\""
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 113
(
 #";-------------------------------------------------------------------"
 #"---------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";EJERCICIO 4"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";eliminardelista: list -> list"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";Prop\303\263sito:"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";Elimina productos de la lista si estos no tiene existencias."
0 0 24 29 1 #"\n"
0 0 17 3 134
(
 #";Ejemplo: (eliminardelista l2) -> '((make-producto \"carro\" 5000 50"
 #") (make-producto \"max-steel\" 2 2) (make-producto \"max-steel4\" 20"
 #" 6))"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"eliminardelista"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                  [("
0 0 14 3 17 #"verificarunidades"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 15 #"producto-nombre"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 15 #"eliminardelista"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 15 #"eliminardelista"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";Pruebas"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"eliminardelista"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"eliminardelista"
0 0 24 3 1 #" "
0 0 14 3 2 #"l2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-producto"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"carro\""
0 0 24 3 1 #" "
0 0 21 3 4 #"5000"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-producto"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"max-steel\""
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-producto"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"max-steel4\""
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"eliminardelista"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-producto"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"carro\""
0 0 24 3 1 #" "
0 0 21 3 4 #"5000"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-producto"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"barbie\""
0 0 24 3 1 #" "
0 0 21 3 5 #"10000"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-producto"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"max-steel\""
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-producto"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"max-steel4\""
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 113
(
 #";-------------------------------------------------------------------"
 #"---------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";EJERCICIO 5"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Contrato:"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";n_items: list number number -> number"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";Prop\303\263sito:"
0 0 24 29 1 #"\n"
0 0 17 3 67
(
 #";Hallar el precio total de comprar uno o varios art\303\255culos igu"
 #"ales."
) 0 0 24 29 1 #"\n"
0 0 17 3 41 #";Ejemplo: (n_items l1 \"carro\" 2) -> 10000"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"n_items"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                              [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"producto-nombre"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #" ("
0 0 14 3 14 #"producto-costo"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 7 #"n_items"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";Pruebas"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"n_items"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"carro\""
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 5 #"10000"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"n_items"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"carro\""
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #")"
0           0
